package milu.kiriu2010.math

import milu.kiriu2010.gui.basic.MyPointF
import kotlin.math.PI
import kotlin.math.atan

class MyMathUtil {
    companion object {
        // --------------------------------------------
        // 小数点以下の桁数を取得
        // --------------------------------------------
        // http://d.hatena.ne.jp/fyts/20080916/snippet
        // --------------------------------------------
        fun getNumberOfDecimals(num: Float): Int {
            val strNum = num.toString().trimEnd('0')
            val index = strNum.indexOf('.')
            return when (index) {
                // 整数の場合、小数点以下の桁数は0
                -1 -> 0
                // 少数の場合、小数点以下の桁数は"."より右の文字数
                else -> strNum.substring(index+1).length
            }
        }

        // --------------------------------------------
        // "線分A-B"の角度を求める
        // --------------------------------------------
        fun getAngle(a: MyPointF, b: MyPointF ): Double {
            return when {
                // -------------------------
                // BがAより右下(正:正)
                // 0 ～ 90度
                // -------------------------
                (b.x >= a.x) and (b.y >= a.y) -> {
                    atan((b.y-a.y)/(b.x-a.x)) *180f/ PI
                }
                // -----------------------------------------------------------------------
                // BがAより左下(負:正)
                // 90 ～ 180度
                // -----------------------------------------------------------------------
                // atanは"-π/2 ～+π/2"を返すが、
                // 360度形式にしたいのと、左右が反転しているので180度からマイナスしている
                // -----------------------------------------------------------------------
                (b.x < a.x) and (b.y >= a.y) -> {
                    180f - atan((b.y-a.y)/(a.x-b.x)) *180f/ PI
                }
                // -----------------------------------------------------------------------
                // BがAより左上(負:負)
                // 180 ～ 270度
                // -----------------------------------------------------------------------
                // atanは"-π/2 ～+π/2"を返すが、
                // 360度形式にしたいのと、上下左右が反転しているので180度を加算している
                // -----------------------------------------------------------------------
                (b.x < a.x) and (b.y < a.y) -> {
                    atan((a.y-b.y)/(a.x-b.x)) *180f/ PI + 180f
                }
                // ------------------------------------------------------------------
                // BがAより右上(正:負)
                // 270 ～ 360度
                // ------------------------------------------------------------------
                // atanは"-π/2 ～+π/2"を返すが360度形式にしたいので360度足している
                // ------------------------------------------------------------------
                else -> {
                    atan((b.y-a.y)/(b.x-a.x)) *180f/ PI + 360f
                }
            }
        }

    }
}